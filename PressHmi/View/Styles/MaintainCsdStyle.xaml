<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PressHmi.View.Styles">
    <Style x:Key="MopFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MopShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="MopButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MopFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="1"
                		BorderThickness="1"
                		Padding="0" 
                		Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Height}" 
                        Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Width}" 
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel x:Name="grid0" Grid.Row="1" Panel.ZIndex="20">
                                <TextBlock x:Name="text2" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path = Tag}" 
                                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FontSize}"
                                           HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,2,0,0"
                                           FontFamily="YouYuan" FontWeight="Bold" 
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            </StackPanel>
                            <Grid x:Name="grid1" Grid.Row="1" Panel.ZIndex="10" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" 
                                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FontSize}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#428bca"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#428bca"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF333399"/>
                            <Setter TargetName="border" Property="Background" Value="#FF333399"/>
                            --><!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                            <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>--><!--
                        </Trigger>-->
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="MopToggleFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MopToggleShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="MopToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MopFocusVisual}" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="1"
                		BorderThickness="1"
                		Padding="0" 
                		Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Height}" 
                        Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Width}" 
                        BorderBrush="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= BorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel x:Name="grid0" Grid.Row="1" Panel.ZIndex="20">
                                <TextBlock x:Name="text2" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path = Tag}" 
                                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FontSize}"
                                           HorizontalAlignment="Left" VerticalAlignment="Top" Margin="2,2,0,0"
                                           FontFamily="YouYuan" FontWeight="Bold" 
                                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            </StackPanel>
                            <Grid x:Name="grid1" Grid.Row="1" Panel.ZIndex="10" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Background}">
                                <TextBlock x:Name="text1" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Content}" 
                                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= FontSize}"
                                           HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="YouYuan" FontWeight="Bold" Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path= Foreground}"/>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#428bca"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#428bca"/>
                            <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#428bca"/>
                            <Setter TargetName="border" Property="Background" Value="#428bca"/>
                        </Trigger>
                        <!--<Setter TargetName="border" Property="Background" Value="#FF2E205B"/>
                            <Setter TargetName="grid1" Property="Background" Value="#FF333399"/>
                            <Setter TargetName="text1" Property="Foreground" Value="White"/>
                            <Setter TargetName="text1" Property="FontWeight" Value="Bold"/>-->
                        <!--<Setter TargetName="border"  Property="Background" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        <!--<Setter TargetName="border" Property="BorderBrush" Value="{StaticResource MainMenuChecked_SCB}"/>-->
                        <!--
                        </Trigger>-->
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />-->
                            <!--<Setter Property="Foreground" Value="#FFF74848"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="Opacity" Value="0.7" />-->
                            <!--<Setter Property="Foreground" Value="Gray" />-->
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>