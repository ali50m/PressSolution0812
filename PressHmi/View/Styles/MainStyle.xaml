<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:SciChart="http://schemas.abtsoftware.co.uk/scichart"
                    xmlns:local="clr-namespace:PressHmi.View.Styles">
    <Style x:Key="MyButtonBase" BasedOn="{x:Null}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Focusable" Value="False"></Setter>
    </Style>


    <Style x:Key="MainMenuNormalButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainMenuNormalButton" BasedOn="{StaticResource MyButtonBase}" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MainMenuNormalButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource MainMenuBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{DynamicResource MainMenuBorder}"
						SnapsToDevicePixels="False" Background="Transparent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="text2" Grid.Row="0" FontSize="{DynamicResource TextPrimerSize}" Margin="2,2,2,1"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
										Text="{Binding Content.Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="{DynamicResource MainMenuForeground}"/>
                            <TextBlock x:Name="text3" Grid.Row="1"  FontSize="{DynamicResource TextPrimerSize}" Margin="2,1,2,2"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Top"
										Text="{Binding Content.Text2, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="{DynamicResource MainMenuForeground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MainMenuCheckedBackground}" />
                            <Setter TargetName="text2" Property="Foreground" Value="{DynamicResource MainMenuCheckedForeground}" />
                            <Setter TargetName="text3" Property="Foreground" Value="{DynamicResource MainMenuCheckedForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainMenuNormalNButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainMenuNormalNButton" BasedOn="{StaticResource MyButtonBase}" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MainMenuNormalNButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource MainMenuBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="2" BorderThickness="1" BorderBrush="{DynamicResource MainMenuBorder}"
						SnapsToDevicePixels="False" Background="Transparent">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock x:Name="text2" Grid.Row="0" FontSize="{DynamicResource TextPrimerSize}" Margin="2,2,2,1"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Bottom"
										Text="{Binding Content.Text, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="{DynamicResource MainMenuForeground}"/>
                            <TextBlock x:Name="text3" Grid.Row="1"  FontSize="{DynamicResource TextPrimerSize}" Margin="2,1,2,2"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Center" VerticalAlignment="Top"
										Text="{Binding Content.Text2, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="{DynamicResource MainMenuForeground}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MainMenuCheckedBackground}" />
                            <Setter TargetName="text2" Property="Foreground" Value="{DynamicResource MainMenuCheckedForeground}" />
                            <Setter TargetName="text3" Property="Foreground" Value="{DynamicResource MainMenuCheckedForeground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainAlarmNormalButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainAlarmNormalButton" BasedOn="{StaticResource MyButtonBase}" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="{DynamicResource MenuButtonFontSize}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource MainAlarmNormalButtonFocusVisual}" />
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" CornerRadius="0" BorderThickness="0" BorderBrush="{DynamicResource MainMenuBorder}"
						SnapsToDevicePixels="False" Background="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}}">
                        <Grid>
                            <TextBlock x:Name="text2" FontSize="{Binding FontSize,RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="5"  FontFamily="Microsoft YaHei UI Light"
                                        HorizontalAlignment="Left" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource MenuPressedBackground}" />
                            <Setter TargetName="text2" Property="Foreground" Value="{DynamicResource MenuPressedForeground}" />
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataInputButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Grid Margin="4 2">
                        <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                        <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataInputButtonShadowStyle">
        <Setter Property="Control.Foreground" Value="#FF2E205B" />
    </Style>
    <Style x:Key="DataInputButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,0"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource DataInputButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource DataInputButtonBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
						BorderThickness="0"
						Padding="0" 
						Height="Auto" Width="Auto" 
						Background="Transparent"
						SnapsToDevicePixels="False" BorderBrush="White">
                        <Grid>
                            <Border x:Name="border" CornerRadius="10" Height="60" Width="60" BorderBrush="{StaticResource DataInputButtonBackground}" BorderThickness="0" Background="{StaticResource DataInputButtonBackground}">
                                <Grid HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,0" Height="60" Width="60">
                                    <TextBlock x:Name="text" FontSize="24" Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center" 
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DataInputButtonClickedBackground}" />
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource DataInputButtonClickedForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DataInputButtonClickedBackground}" />
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource DataInputButtonClickedForeground}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF2E205B"/>
                        </Trigger>
                        <!--<Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{StaticResource DataButtonClickedBackground}" />
                            <Setter TargetName="text" Property="Foreground" Value="{StaticResource DataButtonClickedForeground}" />
                        </Trigger>-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SeriesButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Margin" Value="0,5"/>
        <Setter Property="FontFamily" Value="YouYuan"/>
        <Setter Property="FontSize" Value="16px"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" CornerRadius="0"
						BorderThickness="0"
						Padding="0"
						Height="Auto" Width="Auto"
						SnapsToDevicePixels="False" BorderBrush="Gray">
                        <Grid>
                            <Border CornerRadius="0" BorderBrush="Gray" BorderThickness="1">
                                <Grid  x:Name="grid" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" >
                                    <TextBlock x:Name="text" FontSize="28" Margin="5" HorizontalAlignment="Center" VerticalAlignment="Center"
										Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
										Foreground="Gray" Style="{DynamicResource FontAwesome}"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                            <Setter TargetName="text" Property="Foreground" Value="#FF4788c8" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Gray" />
                            <Setter TargetName="text" Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF2E205B"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF140A36" />
                            <Setter Property="Foreground" Value="#FFF74848"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Opacity" Value="0.7" />
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SciChartAxisStyle" TargetType="SciChart:AxisBase">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="TitleFontSize" Value="16"/>
        <Setter Property="TitleFontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="SciChartAxisLabelStyle" TargetType="SciChart:DefaultTickLabel">
        <Setter Property="FontSize" Value="16"/>
    </Style>

</ResourceDictionary>